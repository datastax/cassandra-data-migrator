<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>datastax.cdm</groupId>
  <artifactId>cassandra-data-migrator</artifactId>
  <version>4.1.8-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <scala.version>2.13.12</scala.version>
    <scala.main.version>2.13</scala.main.version>
    <spark.version>3.4.1</spark.version>
    <scalatest.version>3.2.17</scalatest.version>
    <connector.version>3.4.1</connector.version>
    <cassandra.version>5.0-alpha1</cassandra.version>
    <junit.version>5.9.1</junit.version>
    <mockito.version>4.11.0</mockito.version>
    <java-driver.version>4.17.0</java-driver.version>
    <log4j.version>2.20.0</log4j.version>
  </properties>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/datastax/cassandra-data-migrator</url>
    </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.main.version}</artifactId>
      <version>${spark.version}</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j2-impl</artifactId>
        </exclusion>
      </exclusions>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.main.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_${scala.main.version}</artifactId>
      <version>${spark.version}</version>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>apache-log4j-extras</artifactId>
        </exclusion>
      </exclusions>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.datastax.spark</groupId>
      <artifactId>spark-cassandra-connector_${scala.main.version}</artifactId>
      <version>${connector.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-core-shaded</artifactId>
	</exclusion>
	<exclusion>
	  <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-mapper-runtime</artifactId>
	</exclusion>
	<exclusion>
	  <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-query-builder</artifactId>
	</exclusion>
	<exclusion>
	  <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-shaded-guava</artifactId>
	</exclusion>
      </exclusions>
    </dependency>

	<!-- Adding Java Driver latest version explicitly -->
	<dependency>
	  <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-core-shaded</artifactId>
	  <version>${java-driver.version}</version>
	</dependency>
	<dependency>
	  <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-mapper-runtime</artifactId>
	  <version>${java-driver.version}</version>
	</dependency>
	<dependency>
	  <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-query-builder</artifactId>
	  <version>${java-driver.version}</version>
	</dependency>
	<!-- <dependency>
	  <groupId>com.datastax.oss</groupId>
	  <artifactId>java-driver-shaded-guava</artifactId>
	  <version>${java-driver.version}</version>
	</dependency> -->
	
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-posix</artifactId>
      <version>3.1.18</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-to-slf4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.main.version}</artifactId>
      <version>${scalatest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cassandra</groupId>
      <artifactId>cassandra-all</artifactId>
      <version>${cassandra.version}</version>
      <scope>test</scope>
      <exclusions>
        <!-- Excluded to allow for Cassandra to run embedded -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>log4j-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Force Guava 18 on Test CP, Required for Cassandra -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <scm>
    <connection>scm:git:git@github.com:datastax/cassandra-data-migrator.git</connection>
    <developerConnection>scm:git:git@github.com:datastax/cassandra-data-migrator.git</developerConnection>
    <url>https://github.com/datastax/cassandra-data-migrator</url>
    <tag>@{version}</tag>
  </scm>

  <build>
    <resources>
      <resource>
        <directory>src/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.8.0</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>

          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.1</version>
        <executions>
          <execution>

            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>

            <configuration>
              <filters>
                <filter>
                  <!-- filter out signature files from signed dependencies, else repackaging fails with security ex -->
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Instructions from http://www.scalatest.org/user_guide/using_the_scalatest_maven_plugin -->
      <!-- disable surefire -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!-- enable scalatest -->
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>2.2.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>WDF TestSuite.txt</filereports>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!-- Integrate JaCoCo code coverage plugin from https://www.eclemma.org/jacoco/trunk/doc/index.html -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.10</version>
        <executions>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-check</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
              <goal>report</goal>
            </goals>
            <configuration>
              <excludes>
                <!-- Excluding all the Scala classes -->
                <exclude>com.datastax.cdm.job.*</exclude>
              </excludes>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>COMPLEXITY</counter>
                      <value>COVEREDRATIO</value>
<!--                      <minimum>0.33</minimum>-->
                      <minimum>0</minimum>
                    </limit>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
<!--                      <minimum>41%</minimum>-->
                      <minimum>0%</minimum>
                    </limit>
                    <limit>
                      <counter>LINE</counter>
                      <value>MISSEDCOUNT</value>
<!--                      <maximum>1544</maximum>-->
                      <maximum>3052</maximum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
